if (rootProject.ext.isMoudle) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
def configAndroid = rootProject.ext.android
def configAppId = rootProject.ext.appId
android {
    compileSdkVersion configAndroid.compileSdkVersion
    buildToolsVersion configAndroid.buildToolsVersion

    defaultConfig {
        minSdkVersion configAndroid.minSdkVersion
        targetSdkVersion configAndroid.targetSdkVersion
        versionCode configAndroid.versionCode
        versionName configAndroid.versionName
        if (rootProject.ext.isMoudle) {
            applicationId configAppId.moudle1
        }
        buildConfigField("boolean","isMoudle",String.valueOf(rootProject.ext.isMoudle))
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //资源配置
        sourceSets {
            main {
                if (rootProject.ext.isMoudle) {
                    //组件模式
                    manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                    java.srcDirs 'src/main/java'
                } else {
                    //集成模式
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                    //release 时 debug 目录下文件不需要合并到主工程
                    java {
                        exclude('**/debug*/*')
                    }
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies["appcompat-v7"]
}
